@startuml
actor Admin
boundary ClienteController
participant cliente_schema
entity ClienteModel
database BookMakerDS
Admin -> ClienteController: GET by Id (Request)
activate ClienteController
ClienteController -> ClienteModel: get_or_404()
activate cliente_schema
activate ClienteModel
ClienteModel -> data: query (SELECT)
ClienteModel <- data: Registro
cliente_schema <- ClienteModel: Objeto cliente
deactivate ClienteModel
ClienteController <- cliente_schema: Json cliente
deactivate cliente_schema
Admin <- ClienteController: json (Response)
deactivate ClienteController
Admin -> ClienteController: PUT by Id (Request)
activate ClienteController
ClienteController -> ClienteModel: get_or_404()
activate ClienteModel
ClienteModel -> data: query (SELECT))
ClienteModel <- data: Registro
ClienteController <- ClienteModel: Objeto cliente
deactivate ClienteModel
ClienteController -> ClienteModel: Add
activate ClienteModel
ClienteController -> ClienteModel: Commit
ClienteModel -> data: UPDATE
ClienteModel <- data: Registro
cliente_schema <- ClienteModel :Objeto cliente
activate cliente_schema
ClienteController <- cliente_schema: Json cliente
deactivate ClienteModel

deactivate cliente_schema
Admin <- ClienteController: json (Response)
deactivate ClienteController
Admin -> ClienteController: DELETE by id (Request)
Admin <- ClienteController: Request (Status OK)
@enduml